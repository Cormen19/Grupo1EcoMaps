@page "/rickmorty"
@using Model
@inject HttpClient Client
<button class="botonPersonajes" type="button" @onclick=SinBuscador>Personajes</button>
<button type="button" class="botonPersonajes" @onclick=ConBuscador>Buscador Personajes</button>
<button class="botonPersonajes" type="button" @onclick=ConSelect>Select Personajes</button>

@if (sinBuscador == true)
{
    <h3 class="tituloPersonajes">Personajes</h3>
    <table>
        @if (personajesModel != null)
        {
            <tr>
                <th>Nombre</th>
                <th class="imagenPersonajesTH">Imagen</th>
            </tr>
            foreach (var item in personajesModel.results.Skip(contador * 4).Take(4))
            {


                <tr>
                    <td>@item.name</td>
                    <td><a href="/detallespersonajes/@item.id"><img src="@item.image" class="imagenPersonajes" /></a></td>
                </tr>

            }

        }
    </table>
    <button type="button" class="btn btn-outline-primary" @onclick=Anterior style="margin-top:2%">Anterior</button>
    <button type="button" class="btn btn-outline-primary" @onclick=Siguiente style="margin-top:2%;margin-left:1%">Siguiente</button>
}

@if (conBuscador == true)
{
    
    <div class="inputBuscador">
    <input type="text" @bind="@name" placeholder="Personaje"/>
    <button class="btn btn-outline-primary" @onclick="PersonajeNombre">Buscar</button>
    </div>
    <div class="resultadosBusqueda">
    @if (personajesModel2 != null)
    {
        foreach(var item in personajesModel2.results)
        {
                <BuscadorCard name=@item.name
                    status=@item.status
                    gender=@item.gender
                    image=@item.image />
        }
    }
    </div>
    
}

@if (conSelect == true)
{
    <h3 class="selectLocations">Buscador Select</h3>
    <select>
    @if (localizacion != null)
    {
        
        foreach(var item in localizacion)
        {
          <option>@item.name</option> 
                
            
        }
        
    }
    </select>
}



@code {
    bool sinBuscador = false;
    bool conBuscador = false;
    bool conSelect = false;
    public int contador = 0;
    public int contador1 = 1;
    string name;
    PersonajesModel personajesModel;
    PersonajesModel personajesModel2;
    List<Location> localizacion = new List<Location>();
    protected override async Task OnInitializedAsync()
    {
        personajesModel = await Client.GetFromJsonAsync<PersonajesModel>(Endpoints.GetAllPersonajes());
    }
    void Anterior()
    {
        if (contador == 0)
        {
            return;
        }
        else
        {
            contador--;
        }
    }
    void Siguiente()
    {
        if (contador == 4)
        {
            return;
        }
        else
        {
            contador++;
        }
    }
    void SinBuscador()
    {
        sinBuscador = true;
        conBuscador = false;
        conSelect = false;
    }
    void ConBuscador()
    {
        sinBuscador = false;
        conSelect = false;
        conBuscador = true;
    }
    void ConSelect()
    {
        sinBuscador = false;
        conBuscador = false;
        conSelect = true;

        quitarDuplicados();
    }
    async Task PersonajeNombre()
    {
        personajesModel2 = await Client.GetFromJsonAsync<PersonajesModel>(Endpoints.GetPersonajesByName(name));
    }
    private void quitarDuplicados()
    {
        for (int i = 0; i < personajesModel.results.Length; i++)
        {
            Location location = new Location();
            location = personajesModel.results[i].location;
            localizacion.Add(location);

        }
        localizacion = localizacion.GroupBy(x=>x.name).Select(g=>g.First()).ToList();
    }

}
