@using Microsoft.JSInterop
@using Radzen.Blazor;
@using Radzen;
@inject IJSRuntime JSRuntime
@page "/mapa"
<h3>MapaPage</h3>
<div class="container-fluid">
    <div class="row p-3">
        <div class="col">
            <RadzenCard class="mb-4" id="map">
                <RadzenCheckBox @bind-Value=@showMadridMarker Name="showMarker" />
                <RadzenLabel Text="Show marker for Madrid" Component="showMarker" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenGoogleMap @ref=map style="height: 400px" Options=@(new Dictionary<string, object> { { "disableDoubleClickZoom", true } })
                             Zoom=@zoom Center=@(new GoogleMapPosition() { Lat = 42.6977, Lng = 23.3219 }) MapClick=@OnMapClick MarkerClick=@OnMarkerClick>
                <Markers>
                    <RadzenGoogleMapMarker Title="London" Label="London" Position=@(new GoogleMapPosition() { Lat = 51.5074, Lng = 0.1278 }) />
                    <RadzenGoogleMapMarker Title="Paris " Label="Paris" Position=@(new GoogleMapPosition() { Lat = 48.8566, Lng = 2.3522 }) />
                    @if (showMadridMarker)
                    {
                        <RadzenGoogleMapMarker Title="Madrid " Label="Madrid" Position=@(new GoogleMapPosition() { Lat = 40.4168, Lng = -3.7038 }) />
                    }
                </Markers>
            </RadzenGoogleMap>
        </div>
    </div>
</div>



@code {
    int zoom = 3;
    bool showMadridMarker;
    string mensaje = "";

    RadzenGoogleMap map;

    async void OnMapClick(GoogleMapClickEventArgs args)
    {
        //Meter un sweet alert que muestre donde hemos hecho click mostrando la latitud y la longitud
        mensaje = $"Map clicked at Lat:{args.Position.Lat}, Lng:{args.Position.Lng}";
        await JSRuntime.InvokeVoidAsync("alert", mensaje);
    }

    async Task OnMarkerClick(RadzenGoogleMapMarker marker)
    {
        var message = $"Custom information about <b>{marker.Title}</b>";

        var code = $@"
            var map = Radzen['{map.UniqueID}'].instance;
            var marker = map.markers.find(m => m.title == '{marker.Title}');
            if(window.infoWindow) {{window.infoWindow.close();}}
            window.infoWindow = new google.maps.InfoWindow({{content: '{message}'}});
            setTimeout(() => window.infoWindow.open(map, marker), 200);
            ";

        await JSRuntime.InvokeVoidAsync("eval", code);
    }
}