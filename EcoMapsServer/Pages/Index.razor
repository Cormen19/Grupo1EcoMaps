@page "/"
@using System.Threading;
@implements IDisposable
@using Radzen.Blazor
@inject IJSRuntime JSRuntime
<PageTitle>Inicio</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 col-sm-12 p-4">
        <h1>Hola! Bienvenido a <span style="color: forestgreen">EcoMaps</span>!!!</h1>
        </div>
        <div class="col-md-6 col-sm-12 p-4">
            <RadzenRadialGauge Style="height: 250px; margin-left:30%">
                <RadzenRadialGaugeScale Step="1" Min="0" Max="12" StartAngle="0" EndAngle="360" ShowFirstTick="false"
                    MinorStep=@minorStep
                    TickLength="20"
                    MinorTickLength="10"
                    TickLabelOffset="40"
                    TickPosition="GaugeTickPosition.Inside">
                    <RadzenRadialGaugeScalePointer Value=@hours Length="0.6" ShowValue="false" />
                    <RadzenRadialGaugeScalePointer Value=@seconds Length="0.9" Fill="red" Width="2" ShowValue="false" />
                    <RadzenRadialGaugeScalePointer Value=@minutes Length="0.8" ShowValue="false" />
                </RadzenRadialGaugeScale>
            </RadzenRadialGauge>
        </div>
    </div>
</div>
<div>
    <p>Si te interesa saber donde se encuentra los diferentes puntos de apoyo al medio ambiente.</p>
</div>


@code {
    Timer timer;
    double hours;
    double minutes;
    double seconds;

    double minorStep = 12 / 60.0;

    double move = 338;
    double exercise = 2;
    double stand = 8;

    protected override void OnInitialized()
    {
        timer = new Timer(state =>
        {
            var now = DateTime.Now;

            hours = now.Hour % 12 + now.Minute / 60.0;

            minutes = now.Minute * minorStep + now.Second * 12 / 3600.0;
            seconds = now.Second * minorStep;

            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);
    }

    public void Dispose()
    {
        timer?.Dispose();
    }
    
}



